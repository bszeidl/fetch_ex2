{"version":3,"sources":["hooks.jsx","PhotoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","useState","data","setData","loading","setLoading","a","fetch","response","json","useEffect","fetchUrl","PhotoList","map","id","title","src","alt","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAEMA,EAAW,SAACC,GAAS,IAAD,EACDC,mBAAS,IADR,mBAClBC,EADkB,KACZC,EADY,OAEKF,oBAAS,GAFd,mBAElBG,EAFkB,KAETC,EAFS,iDAIzB,8BAAAC,EAAA,sEACwBC,MAAMP,GAD9B,cACOQ,EADP,gBAEoBA,EAASC,OAF7B,OAEOA,EAFP,OAGCN,EAAQM,GACRJ,GAAW,GAJZ,4CAJyB,sBAezB,OAJAK,qBAAU,YAXe,mCAYxBC,MAGM,CAACT,EAAME,I,OCiBAQ,EA/BG,WAAO,IAAD,EAEEb,EACvB,yDAHqB,mBAEfG,EAFe,KAETE,EAFS,KAKvB,OACC,8BAEEA,EACC,UAEA,6BAEEF,EAAKW,KACJ,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOf,EAAb,EAAaA,IAAb,OAEC,sDACec,GACd,qBAAKE,IAAKhB,EAAKiB,IAAKF,eCTfG,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b4b48b65.chunk.js","sourcesContent":["import {useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n\tconst [data, setData] = useState([]);\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\tasync function fetchUrl() {\r\n\t\tconst response = await fetch(url);\r\n\t\tconst json = await response.json();\r\n\t\tsetData(json);\r\n\t\tsetLoading(false);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchUrl();\t\t\t\r\n\t});\r\n\r\n\treturn [data, loading];\r\n}\r\n\r\nexport {useFetch};","import React from 'react';\r\nimport {useFetch} from './hooks';\r\n\r\nconst PhotoList = () => {\r\n\r\n\t\tconst [data, loading] = useFetch(\r\n\t\t\t\"https://jsonplaceholder.typicode.com/photos?albumId=1\"\r\n\t\t);\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t\t{loading ? (\r\n\t\t\t\t\t\"Loading\"\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdata.map(\r\n\t\t\t\t\t\t\t\t({id, title, url}) =>\r\n\t\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\tkey={`photo-${id}`}\r\n\t\t\t\t\t\t\t\t\t\t<img src={url} alt={title}/>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t)\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default PhotoList;\r\n\r\n","import './App.css';\nimport React from 'react';\nimport PhotoList from './PhotoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PhotoList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}